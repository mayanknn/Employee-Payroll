#==================================IMPORTING LIBRARIES================================#
from tkinter import *
import datetime
import mysql.connector as mh
import tkinter.messagebox as mb
from PIL import ImageTk,Image
from tkcalendar import *
from tkinter import ttk
import random
import smtplib
#=====================================CONNECTION=======================================#
link=mh.connect(host="localhost",user="root",password="harshil@2004")
cur=link.cursor(buffered=True)
#================================CREATING MAIN TKINTER WINDOW==========================#
root=Tk()
root.title("EMPLOYEE PAYROL MANAGEMENT SYSTEM")
root.geometry("1350x700+0+0")

main_label_top=Label(root,text="EMPLOYEE PAYROLL MANAGEMENT SYSTEM",font=("Comic Sans MS", 30,"bold" ),bg="yellow",fg="red",padx=10)
main_label_top.place(x=0,y=0,relwidth=1)
#======================================VARIABLES========================================#
Empcode=StringVar()
salary=0
count=0
Designation=StringVar()
DOJ=StringVar()
Name=StringVar()
DOB=StringVar()
experience=StringVar()
Age=StringVar()
Gender=StringVar()
Contact=StringVar()
Email=StringVar()
Caste=StringVar()
MaritalStatus=StringVar()
HiredLocation=StringVar()
BasicSalary=StringVar()
Address=StringVar()
Password=StringVar()
ConfirmPassword=StringVar()
empcode=StringVar()
saloneday=StringVar()
totsal=StringVar()
attu=StringVar()
emp=StringVar()
otp=StringVar()
upas=StringVar()
Days=StringVar()
Gross=StringVar()
Salary=StringVar()
EPF=StringVar()
Net=StringVar()
USERNAME=StringVar()
PASS=StringVar()
#====================================SAVE BUTTON OPERATIONS=============================#
def reg_saving():
    global f1
    if Designation.get()=="" or Name.get()=="" or DOB.get()=="" or experience.get()=="" or Age.get=="" or Gender.get()=="" or Contact.get()=="" or Email.get()=="" or Caste.get()=="" or MaritalStatus.get()=="" or HiredLocation.get()=="" or BasicSalary.get()=="" or Address.get()=="" or Password.get()=="" or ConfirmPassword.get()=="":
        mb.showerror("Error","All fields are required")
    elif Password.get() != ConfirmPassword.get():
        mb.showerror("Error","Password and Confirm Password must be same")
    else:
        pname=Designation.get()
        dname=DOJ.get()
        nname=Name.get()
        doname=DOB.get()
        ename=experience.get()
        aname=Age.get()
        gname=Gender.get()
        cname=Contact.get()
        eename=Email.get()
        ccname=Caste.get()
        sname=MaritalStatus.get()
        hname=HiredLocation.get()
        bname=BasicSalary.get()
        aaname=Address.get()
        attendance=random.randrange(22,30)
        k=int(bname)
        DA=(k*166)//100
        HRA=(k*30)//100
        Medical=2000
        EPF1=(k*12)//100
        net_amt=k+DA+HRA+Medical-EPF1
        one=net_amt//31
        Gross=one*attendance
        print(net_amt)
        cur.execute("create database if not exists PayrollManager")
        cur.execute("use PayrollManager")
        cur.execute('''create table if not exists Payroll
        (Empcode int auto_increment primary key,
        Designation varchar(25),
        DOJ varchar(25),
        Name varchar(25),
        DOB varchar(25),
        experience varchar(25),
        Age varchar(25),
        Gender varchar(25),
        Contact varchar(25),
        Email varchar(50),
        Caste varchar(25),
        MaritalStatus varchar(25),
        HiredLocation varchar(25),
        BasicSalary varchar(25),
        Address varchar(25))''')
        sql="insert into Payroll(Designation,DOJ,Name,DOB,experience,Age,Gender,Contact,Email,Caste,MaritalStatus,HiredLocation,BasicSalary,Address) values(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
        cur.execute(sql,(pname,dname,nname,doname,ename,aname,gname,cname,eename,ccname,sname,hname,bname,aaname,))
        link.commit()
        passwd=Password.get()
        enter=Name.get()
        emp=Empcode.get()
        cur.execute("use PayrollManager")
        cur.execute('''create table if not exists login1
        (Empcode int auto_increment primary key,
        Name varchar(25),
        password varchar(25))''')
        sql="insert into login1(Name,password) values(%s,%s)"
        cur.execute(sql,(enter,passwd,))
        link.commit()
        bbname=BasicSalary. get()
        cur.execute("use PayrollManager")
        cur.execute('''create table if not exists salary(Empcode int auto_increment primary key,
        BasicSalary varchar(25),
        DA varchar(25),
        Medical varchar(25),
        HRA varchar(25),
        EPF varchar(25),
        Net_salary varchar(25),
        Present varchar(25),
        One_day varchar(25),
        Gross_Salary varchar(25))''')
        sql="insert into salary(Basicsalary,DA,Medical,HRA,EPF,Net_salary,Present,One_day,Gross_Salary) values(%s,%s,%s,%s,%s,%s,%s,%s,%s)"
        cur.execute(sql,(bbname,DA,Medical,HRA,EPF1,net_amt,attendance,one,Gross,))
        link.commit()
        cur.execute("use PayrollManager")
        cur.execute("select Empcode from Payroll")
        k=cur.fetchall()
        f=list(k)
        s=f[-1][0]
        mb.showinfo("Information",f"Your Enployee code is {s}")
        f1.destroy()
        Empcode. set("")
        Designation. set("")
        DOJ. set("")
        Name. set("")
        DOB. set("")
        experience. set("")
        Age. set("")
        Gender. set("")
        Contact. set("")
        Email. set("")
        Caste. set("")
        MaritalStatus. set("")
        HiredLocation. set("")
        BasicSalary. set("")
        Address. set("")
        Password. set("")
        ConfirmPassword. set("")
        main()
#======================================REGISTER SCREEN==================================#
def register():
    global f1
    def bck1():
        f1.destroy()
        cal.destroy()
        Empcode. set("")
        Designation. set("")
        DOJ. set("")
        Name. set("")
        DOB. set("")
        experience. set("")
        Age. set("")
        Gender. set("")
        Contact. set("")
        Email. set("")
        Caste. set("")
        MaritalStatus. set("")
        HiredLocation. set("")
        BasicSalary. set("")
        Address. set("")
        Password. set("")
        ConfirmPassword. set("")
    f1=Frame(root,bd=2,relief=RIDGE,bg="light cyan")
    f1.place(x=0,y=50,width=1400,height=800)
    tc=Label(root,text="Employee Payroll Management System",font=("Times New Roman",40),fg="white",bg="brown")
    tc.place(x=0,y=0,relwidth=1)
    mpo=Label(f1,text="Fill Up Your Necessary Details !!!",font=("Times New Roman",20),fg="black",bg="yellow")
    mpo.place(x=0,y=20,relwidth=1)
    d=Label(f1,text="Designation",font=("Times New Roman",18,"bold"),bg="light cyan")
    d.place(x=20,y=100)
    ent=Entry(f1,font=("Comic Sans MS,",12),textvariable=Designation)
    ent.place(x=220,y=100,width=280,height=30)
    f=Label(f1,text="DOJ",font=("Times New Roman",18,"bold"),bg="light cyan")
    f.place(x=680,y=100)
    g=Entry(f1,font=("Comic Sans MS,",12),textvariable=DOJ)
    DOJ. set(datetime.date.today())
    g.place(x=880,y=100,width=280,height=30)
    h1=Label(f1,text="Name",font=("Times New Roman",18,"bold"),bg="light cyan")
    h1.place(x=20,y=145)
    i=Entry(f1,font=("Comic Sans MS,",12),textvariable=Name)
    i.place(x=220,y=145,width=280,height=30)
    j=Label(f1,text="DOB",font=("Times New Roman",18,"bold"),bg="light cyan")
    j.place(x=680,y=145)
    cal=DateEntry(f1,selectmode='day',textvariable=DOB,font=("Comic Sans MS,",12))
    cal.place(x=880,y=145,width=280,height=30)
    l=Label(f1,text="Expierence",font=("Times New Roman",18,"bold"),bg="light cyan")
    l.place(x=20,y=185)
    m=Entry(f1,font=("Comic Sans MS,",12),textvariable=experience)
    m.place(x=220,y=185,width=280,height=30)
    n=Label(f1,text="Age",font=("Times New Roman",18,"bold"),bg="light cyan")
    n.place(x=680,y=185)
    o=Entry(f1,font=("Comic Sans MS,",12),textvariable=Age)
    o.place(x=880,y=185,width=280,height=30)
    p=Label(f1,text="Gender",font=("Times New Roman",18,"bold"),bg="light cyan")
    p.place(x=20,y=225)
    q=Entry(f1,font=("Comic Sans MS,",12),textvariable=Gender)
    q.place(x=220,y=225,width=280,height=30)
    r=Label(f1,text="Contact",font=("Times New Roman",18,"bold"),bg="light cyan")
    r.place(x=680,y=225)
    s=Entry(f1,font=("Comic Sans MS,",12),textvariable=Contact)
    s.place(x=880,y=225,width=280,height=30)
    t=Label(f1,text="Email Id",font=("Times New Roman",18,"bold"),bg="light cyan")
    t.place(x=20,y=265)
    u=Entry(f1,font=("Comic Sans MS,",12),textvariable=Email)
    u.place(x=220,y=265,width=280,height=30)
    v=Label(f1,text="Category",font=("Times New Roman",18,"bold"),bg="light cyan")
    v.place(x=680,y=265)
    w=Entry(f1,font=("Comic Sans MS,",12),textvariable=Caste)
    w.place(x=880,y=265,width=280,height=30)
    x=Label(f1,text="Marital Status",font=("Times New Roman",18,"bold"),bg="light cyan")
    x.place(x=20,y=305)
    y=Entry(f1,font=("Comic Sans MS,",12),textvariable=MaritalStatus)
    MaritalStatus. set("Married / Unmarried")
    y.place(x=220,y=305,width=280,height=30)
    z=Label(f1,text="Hired Location",font=("Times New Roman",18,"bold"),bg="light cyan")
    z.place(x=680,y=305)
    aa=Entry(f1,font=("Comic Sans MS,",12),textvariable=HiredLocation)
    aa.place(x=880,y=305,width=280,height=30)
    ab=Label(f1,text="Basic Salary",font=("Times New Roman",18,"bold"),bg="light cyan")
    ab.place(x=20,y=345)
    ac=Entry(f1,font=("Comic Sans MS,",12),textvariable=BasicSalary)
    ac.place(x=220,y=345,width=280,height=30)
    ad=Label(f1,text="Address",font=("Times New Roman",18,"bold"),bg="light cyan")
    ad.place(x=680,y=345)
    ae=Entry(f1,font=("Comic Sans MS,",12),textvariable=Address)
    ae.place(x=880,y=345,width=350,height=75)
    af=Label(f1,text="Password",font=("Times New Roman",18,"bold"),bg="light cyan")
    af.place(x=20,y=385)
    ag=Entry(f1,font=("Comic Sans MS,",12),textvariable=Password,show="*")
    ag.place(x=220,y=385,width=280,height=30)
    ah=Label(f1,text="Confirm Password",font=("Times New Roman",18,"bold"),bg="light cyan")
    ah.place(x=20,y=425)
    ai=Entry(f1,font=("Comic Sans MS,",12),textvariable=ConfirmPassword,show="*")
    ai.place(x=220,y=425,width=280,height=30)
    bs=Button(f1,text="SAVE",font=("Times New Roman",20),command=reg_saving,bg="black",fg="white")
    bs.place(x=880,y=530,width=150,height=50)
    bs=Button(f1,text="BACK",font=("Times New Roman",20),command=bck1,fg="white",bg="black")
    bs.place(x=220,y=530,width=150,height=50)
#======================================SEARCH=========================================#
def search():
    def bck_srch():
        f1.destroy()
        Empcode. set("")
        Designation. set("")
        DOJ. set("")
        Name. set("")
        DOB. set("")
        experience. set("")
        Age. set("")
        Gender. set("")
        Contact. set("")
        Email. set("")
        Caste. set("")
        MaritalStatus. set("")
        HiredLocation. set("")
        BasicSalary. set("")
        Address. set("")
    def clear():
            Empcode. set("")
            Designation. set("")
            DOJ. set("")
            Name. set("")
            DOB. set("")
            experience. set("")
            Age. set("")
            Gender. set("")
            Contact. set("")
            Email. set("")
            Caste. set("")
            MaritalStatus. set("")
            HiredLocation. set("")
            BasicSalary. set("")
            Address. set("")
    def mm():
        if Empcode.get()=="":
            mb.showerror("Error","Enter Employee Id")
        cur.execute("use PayrollManager")
        cur.execute("select * from Payroll where empcode={}".format(Empcode.get()))
        row=cur.fetchone()
        if row==None:
            mb.showinfo("Error","Employee id not found")
        else:
            print(row)
            Designation. set(row[1])
            DOJ. set(row[2])
            Name. set(row[3])
            DOB. set(row[4])
            experience. set(row[5])
            Age. set(row[6])
            Gender. set(row[7])
            Contact. set(row[8])
            Email. set(row[9])
            Caste. set(row[10])
            MaritalStatus. set(row[11])
            HiredLocation. set(row[12])
            BasicSalary. set(row[13])
            Address. set(row[14])
    f1=Frame(root,bd=2,relief=RIDGE,bg="light cyan")
    f1.place(x=0,y=50,width=1400,height=800)
    tc=Label(root,text="Employee Payroll Management System",font=("Times New Roman",40),fg="white",bg="brown")
    tc.place(x=0,y=0,relwidth=1)
    mpo=Label(f1,text="Search Employee",font=("Times New Roman",20),fg="black",bg="yellow")
    mpo.place(x=0,y=25,relwidth=1)
    c=Label(f1,text="Enter Employee Code To Search ",font=("Times New Roman",20,"bold"),bg="light cyan")
    c.place(x=0,y=85)
    ko=Entry(f1,font=("Comic Sans MS,",20),textvariable=Empcode)
    ko.place(x=420,y=90,width=280,height=30)
    ll=Button(f1,text="Search",font=("Times New Roman",20),fg="white",bg="black",command=mm)
    ll.place(x=750,y=90,width=150,height=30)
    d=Label(f1,text="Designation",font=("Times New Roman",18,"bold"),bg="light cyan")
    d.place(x=20,y=150)
    ent=Entry(f1,font=("Comic Sans MS,",12),textvariable=Designation)
    ent.place(x=220,y=150,width=280,height=30)
    f=Label(f1,text="DOJ",font=("Times New Roman",18,"bold"),bg="light cyan")
    f.place(x=680,y=150)
    g=Entry(f1,font=("Comic Sans MS,",12),textvariable=DOJ)
    g.place(x=880,y=150,width=280,height=30)
    h1=Label(f1,text="Name",font=("Times New Roman",18,"bold"),bg="light cyan")
    h1.place(x=20,y=190)
    i=Entry(f1,font=("Comic Sans MS,",12),textvariable=Name)
    i.place(x=220,y=190,width=280,height=30)
    j=Label(f1,text="DOB",font=("Times New Roman",18,"bold"),bg="light cyan")
    j.place(x=680,y=190)
    cal=Entry(f1,textvariable=DOB,font=("Comic Sans MS,",12))
    cal.place(x=880,y=190,width=280,height=30)
    l=Label(f1,text="Expierence",font=("Times New Roman",18,"bold"),bg="light cyan")
    l.place(x=20,y=230)
    m=Entry(f1,font=("Comic Sans MS,",12),textvariable=experience)
    m.place(x=220,y=230,width=280,height=30)
    n=Label(f1,text="Age",font=("Times New Roman",18,"bold"),bg="light cyan")
    n.place(x=680,y=230)
    o=Entry(f1,font=("Comic Sans MS,",12),textvariable=Age)
    o.place(x=880,y=230,width=280,height=30)
    p=Label(f1,text="Gender",font=("Times New Roman",18,"bold"),bg="light cyan")
    p.place(x=20,y=270)
    q=Entry(f1,font=("Comic Sans MS,",12),textvariable=Gender)
    q.place(x=220,y=270,width=280,height=30)
    r=Label(f1,text="Contact",font=("Times New Roman",18,"bold"),bg="light cyan")
    r.place(x=680,y=270)
    s=Entry(f1,font=("Comic Sans MS,",12),textvariable=Contact)
    s.place(x=880,y=270,width=280,height=30)
    t=Label(f1,text="Email Id",font=("Times New Roman",18,"bold"),bg="light cyan")
    t.place(x=20,y=310)
    u=Entry(f1,font=("Comic Sans MS,",12),textvariable=Email)
    u.place(x=220,y=310,width=280,height=30)
    v=Label(f1,text="Category",font=("Times New Roman",18,"bold"),bg="light cyan")
    v.place(x=680,y=310)
    w=Entry(f1,font=("Comic Sans MS,",12),textvariable=Caste)
    w.place(x=880,y=310,width=280,height=30)
    x=Label(f1,text="Marital Status",font=("Times New Roman",18,"bold"),bg="light cyan")
    x.place(x=20,y=350)
    y=Entry(f1,font=("Comic Sans MS,",12),textvariable=MaritalStatus)
    y.place(x=220,y=350,width=280,height=30)
    z=Label(f1,text="Hired Location",font=("Times New Roman",18,"bold"),bg="light cyan")
    z.place(x=680,y=350)
    aa=Entry(f1,font=("Comic Sans MS,",12),textvariable=HiredLocation)
    aa.place(x=880,y=350,width=280,height=30)
    ab=Label(f1,text="Basic Salary",font=("Times New Roman",18,"bold"),bg="light cyan")
    ab.place(x=20,y=390)
    ac=Entry(f1,font=("Comic Sans MS,",12),textvariable=BasicSalary)
    ac.place(x=220,y=390,width=280,height=30)
    ad=Label(f1,text="Address",font=("Times New Roman",18,"bold"),bg="light cyan")
    ad.place(x=680,y=390)
    ae=Entry(f1,font=("Comic Sans MS,",12),textvariable=Address)
    ae.place(x=880,y=390,width=350,height=75)
    clr=Button(f1,text="Clear",font=("Times New Roman",20),fg="white",bg="black",command=clear)
    clr.place(x=200,y=510,width=120,height=40)
    bck=Button(f1,text="Back",font=("Times New Roman",20),fg="white",bg="black",command=bck_srch)
    bck.place(x=800,y=510,width=120,height=40)
#============================DISPLAY RECORDS[1st BUTTON]==========================#
def dis():
    def mayank():
        cur.execute("select * from Payroll")
        #rows=cur.fetchall()
        for row in cur:
            print(row)
            Table.insert('',END,values=row)
    f1=Frame(root,bd=5,relief=RIDGE)
    f1.place(x=0,y=70,width=1400,height=800)
    def bck1():
        f1.destroy()
        tc.destroy()
    tc=Label(f1,text="Employee Payroll Management System",font=("Times New Roman",30),fg="white",bg="light cyan")
    tc.place(x=0,y=0,relwidth=1)
    scrolly=Scrollbar(f1,orient=VERTICAL)
    scrollx=Scrollbar(f1,orient=HORIZONTAL)
    Table=ttk.Treeview(f1,columns=('Empcode','Designation','DOJ','Name','DOB','experience','Age','Gender','Contact','Email','Caste','MaritalStatus','HiredLocation','BasicSalary'),yscrollcommand=scrolly.set,xscrollcommand=scrollx.set)
    scrollx.pack(side=TOP,fill=X)
    scrolly.pack(side=RIGHT,fill=Y)
    scrollx.config(command=Table.xview)             #gives command to widget
    scrolly.config(command=Table.yview)
    Table.heading('Empcode',text="EMP ID")          #heading ko rename
    Table.heading('Designation',text="Designation")
    Table.heading('DOJ',text="DOJ")
    Table.heading('Name',text="Name")
    Table.heading('DOB',text="DOB")
    Table.heading('experience',text="experience")
    Table.heading('Age',text="Age")
    Table.heading('Gender',text="Gender")
    Table.heading('Contact',text="Contact")
    Table.heading('Email',text="Email ID")
    Table.heading('Caste',text="Caste")
    Table.heading('MaritalStatus',text="MaritalStatus")
    Table.heading('HiredLocation',text="HiredLocation")
    Table.heading('BasicSalary',text="BasicSalary")
    Table["show"]="headings"                         #extra column aata h usko hata deta h
    mayank()
    Table.column("Empcode",width=100)
    Table.column('Designation',width=100)
    Table.column('DOJ',width=100)
    Table.column('Name',width=100)
    Table.column('DOB',width=100)
    Table.column('experience',width=100)
    Table.column('Age',width=100)
    Table.column('Gender',width=100)
    Table.column('Contact',width=100)
    Table.column('Email',width=100)
    Table.column('Caste',width=100)
    Table.column('MaritalStatus',width=100)
    Table.column('HiredLocation',width=100)
    Table.column('BasicSalary',width=100)
    Table.pack(fill=BOTH,expand=1)                  #dono side fill and expand
    bs=Button(f1,text="Back",font=("Times New Roman",25),command=bck1,bg="white")
    bs.place(x=100,y=500,width=100,height=50)
#==================================UPDATE ANY EMPLOYEE DETAILS==========================#
def update_queries():                 #set jo karna h %s where empcode =%s
    pname=Designation.get()
    dname=DOJ.get()
    nname=Name.get()
    doname=DOB.get()
    ename=experience.get()
    aname=Age.get()
    gname=Gender.get()
    cname=Contact.get()
    eename=Email.get()
    ccname=Caste.get()
    sname=MaritalStatus.get()
    hname=HiredLocation.get()
    bname=BasicSalary.get()
    aaname=Address.get()
    bbname=BasicSalary.get()
    attendance=random.randrange(22,30)
    k=int(bname)
    DA=(k*166)//100
    HRA=(k*30)//100
    Medical=2000
    EPF1=(k*12)//100
    net_amt=k+DA+HRA+Medical-EPF1
    one=net_amt//31
    Gross=one*attendance
    print(net_amt)
    cur.execute("use PayrollManager")
    cur.execute("update Payroll set Designation=%s where empcode=%s",(pname,Empcode.get()))
    cur.execute("update Payroll set DOJ=%s where empcode=%s",(dname,Empcode.get()))
    cur.execute("update Payroll set Name=%s where empcode=%s",(nname,Empcode.get()))
    cur.execute("update Payroll set DOB=%s where empcode=%s",(doname,Empcode.get()))
    cur.execute("update Payroll set experience=%s where empcode=%s",(ename,Empcode.get()))
    cur.execute("update Payroll set Age=%s where empcode=%s",(aname,Empcode.get()))
    cur.execute("update Payroll set Gender=%s where empcode=%s",(gname,Empcode.get()))
    cur.execute("update Payroll set Contact=%s where empcode=%s",(cname,Empcode.get()))
    cur.execute("update Payroll set Email=%s where empcode=%s",(eename,Empcode.get()))
    cur.execute("update Payroll set Caste=%s where empcode=%s",(ccname,Empcode.get()))
    cur.execute("update Payroll set MaritalStatus=%s where empcode=%s",(sname,Empcode.get()))
    cur.execute("update Payroll set HiredLocation=%s where empcode=%s",(hname,Empcode.get()))
    cur.execute("update Payroll set BasicSalary=%s where empcode=%s",(bname,Empcode.get()))
    cur.execute("update salary set BasicSalary=%s where empcode=%s",(bname,Empcode.get()))
    cur.execute("update salary set DA=%s where empcode=%s",(DA,Empcode.get()))
    cur.execute("update salary set Medical=%s where empcode=%s",(Medical,Empcode.get()))
    cur.execute("update salary set HRA=%s where empcode=%s",(HRA,Empcode.get()))
    cur.execute("update salary set EPF=%s where empcode=%s",(EPF1,Empcode.get()))
    cur.execute("update salary set Net_salary=%s where empcode=%s",(net_amt,Empcode.get()))
    cur.execute("update salary set Present=%s where empcode=%s",(attendance,Empcode.get()))
    cur.execute("update salary set One_day=%s where empcode=%s",(one,Empcode.get()))
    cur.execute("update salary set Gross_Salary=%s where empcode=%s",(Gross,Empcode.get()))
    cur.execute("update login1 set Name=%s where Empcode=%s",(nname,Empcode.get()))
    link.commit()
#===========================================Salary Screen===============================   
def paying_screen():
    global salary
    cur.execute("use PayrollManager")
    cur.execute("select * from Payroll where Empcode={}".format(empcode.get()))
    row=cur.fetchone()
    print(row)
    cur.execute("select * from salary where Empcode={}".format(empcode.get()))
    baapu=cur.fetchone()
    otp=f"Hello {row[3]} !! \n EMP CODE : {baapu[0]} \n Basic Salary {baapu[1]} \n + Dearness ALlowance {baapu[2]} \n + Medical Allowance {baapu[3]} \n + House Rent Allowance {baapu[4]} \n - Provident Fund ({baapu[5]}) \n Net Salary = {baapu[6]} \n No. of Days Present {baapu[7]} \n Salary of One Day {baapu[8]} \n Your Gross Salary is {baapu[9]} \n THANK YOU !!"
    print(baapu)
    msg= otp
    s = smtplib.SMTP('smtp.gmail.com', 587)  
    s.starttls()                             #security
    s.login("mhpayrollsystem@gmail.com", "csacgvyuzwiwqzft")   
    emailid = row[9]
    print(emailid)
    s.sendmail('mhpayrollsystem@gmail.com',emailid,msg)
    cur.execute("use payrollmanager")
    #cur.execute("select * from salary where Empcode={}".format(empcode.get()))
    #ad=cur.fetchone()
    lbl2.config(text=f"Total Salary Paid \n [{baapu[-1]}]")
def slry():
    def bck():
        al.destroy()
        empcode. set("")
    def clr():
        oo.config(text="")                #labels ki text gayab
        pp.config(text="")
        qq.config(text="")
        rr.config(text="")
        ss.config(text="")
        tt.config(text="")
        uu.config(text="")
        vv.config(text="")
        ww.config(text="")
    def sr():
        if empcode.get()=="":
                mb.showerror("Error","Please enter an EmployeeId")
        else:
            cur.execute("use PayrollManager")
            cur.execute("select * from salary where empcode={}".format(empcode.get()))#salary wali table ke records aa rahe of empcode from entry
            tatti=cur.fetchone()
            if tatti==None:
                mb.showerror("Error","Invalid EmployeeId")
            else:
                print(tatti)
                oo.config(text=tatti[1])
                pp.config(text=tatti[2])
                qq.config(text=tatti[3])
                rr.config(text=tatti[4])
                ss.config(text=tatti[5])
                tt.config(text=tatti[6])
                uu.config(text=tatti[7])
                vv.config(text=tatti[8])
                ww.config(text=tatti[9])
                poy['state']='normal'
                bbb['state']='disable'    
    tc=Label(root,text="Employee Payroll Management System",font=("Times New Roman",40),fg="white",bg="brown")
    tc.place(x=0,y=0,relwidth=1)
    al=Frame(root,bd=5,bg="light cyan")
    al.place(x=0,y=60,width=1360,height=775)
    mpo=Label(al,text="Calculate Salary",font=("Times New Roman",20),fg="black",bg="yellow")
    mpo.place(x=0,y=20,relwidth=1)
    b=Label(al,text="Enter Employee code",font=("Comic Sans MS,",15),bg="light cyan")
    b.place(x=0,y=100)
    c=Entry(al,font=("Comic Sans MS,",20),textvariable=empcode)
    c.place(x=300,y=100,height=30)
    bbb=Button(al,text="Calculate Salary",font=("Comic Sans MS,",15),bg="light blue",fg="black",command=sr)
    bbb.place(x=650,y=100,height=30)
    bbb['state']='normal'
    ccc=Button(al,text="Clear",font=("Comic Sans MS,",15),bg="light blue",fg="black",command=clr)
    ccc.place(x=1000,y=100,height=30)
    bck=Button(al,text="Back",font=("Times New Roman",20),fg="black",bg="light blue",command=bck)
    bck.place(x=350,y=500,width=120,height=40)
    poy=Button(al,text="Send mail",font=("Times New Roman",20),fg="black",bg="light blue",command=paying_screen)
    poy.place(x=800,y=500,width=120,height=40)
    poy['state']='disabled'
    dd=Label(al,text="Basic",font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    dd.place(x=150,y=300,width=100,height=50)
    ee=Label(al,text="DA",font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    ee.place(x=250,y=300,width=100,height=50)
    ff=Label(al,text="Medical",font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    ff.place(x=350,y=300,width=120,height=50)
    gg=Label(al,text="HRA",font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    gg.place(x=470,y=300,width=100,height=50)
    hh=Label(al,text="EPF",font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    hh.place(x=570,y=300,width=100,height=50)
    ii=Label(al,text="Net",font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    ii.place(x=670,y=300,width=100,height=50)
    jj=Label(al,text="Present",font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    jj.place(x=770,y=300,width=100,height=50)
    mm=Label(al,text="One Day Salary",font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    mm.place(x=870,y=300,width=190,height=50)
    nn=Label(al,text="Gross",font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    nn.place(x=1060,y=300,width=100,height=50)
    oo=Label(al,font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    oo.place(x=150,y=350,width=100,height=50)
    pp=Label(al,font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    pp.place(x=250,y=350,width=100,height=50)
    qq=Label(al,font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    qq.place(x=350,y=350,width=120,height=50)
    rr=Label(al,font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    rr.place(x=470,y=350,width=100,height=50)
    ss=Label(al,font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    ss.place(x=570,y=350,width=100,height=50)
    tt=Label(al,font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    tt.place(x=670,y=350,width=100,height=50)
    uu=Label(al,font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    uu.place(x=770,y=350,width=100,height=50)
    vv=Label(al,font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    vv.place(x=870,y=350,width=190,height=50)
    ww=Label(al,font=("Comic Sans MS",18),bg="white",bd=2,relief=RIDGE)
    ww.place(x=1060,y=350,width=100,height=50)
#==========================================DELETE=====================================
def delete_queries():
    global count
    global lbl1
    k=Empcode.get()
    if k=="":
        mb.showerror("Error","No EmployeeID detected")
    else:
        cur.execute("use PayrollManager")
        cur.execute("Delete from Payroll where empcode={}".format(k))#jo emp code likhenge uske records sab table se chale jaayenge
        cur.execute("Delete from login1 where empcode={}".format(k))
        cur.execute("Delete from salary where empcode={}".format(k))
        link.commit()
        deletam()
        cur.execute("select * from Payroll")
        ad=cur.fetchall()
        for i in ad:
            count=count+1
        lbl1.config(text=f"Total Employees \n [{count}]")
def deletam():
        def bck4():
            f1.destroy()
            f2.destroy()
        cur.execute("use PayrollManager")
        def mayank():
            cur.execute("select * from Payroll")
            rows=cur.fetchall()
            for row in rows:
                Table.insert('',END,values=row)
        f1=Frame(root,bd=5,relief=RIDGE,bg="light cyan")
        f1.place(x=0,y=79,width=1400,height=800)
        f2=Frame(f1,bd=5,relief=RIDGE,bg="white")
        f2.place(x=0,y=450,width=1400,height=800)
        tc=Label(root,text="Employee Payroll Management System",font=("Times New Roman",40),fg="white",bg="brown")
        tc.place(x=0,y=0,relwidth=1)
        mpo=Label(f1,text="Deleting Record",font=("Times New Roman",20),fg="black",bg="yellow")
        mpo.place(x=0,y=20,relwidth=1)
        scrolly=Scrollbar(f2,orient=VERTICAL)
        scrollx=Scrollbar(f2,orient=HORIZONTAL)
        Table=ttk.Treeview(f2,columns=('Empcode','Designation','DOJ','Name','DOB','experience','Age','Gender','Contact','Email','Caste','MaritalStatus','HiredLocation','BasicSalary'),yscrollcommand=scrolly.set,xscrollcommand=scrollx.set)
        scrollx.pack(side=TOP,fill=X)
        scrolly.pack(side=RIGHT,fill=Y)
        scrollx.config(command=Table.xview)
        scrolly.config(command=Table.yview)
        Table.heading('Empcode',text="EMP ID")
        Table.heading('Designation',text="Designation")
        Table.heading('DOJ',text="DOJ")
        Table.heading('Name',text="Name")
        Table.heading('DOB',text="DOB")
        Table.heading('experience',text="experience")
        Table.heading('Age',text="Age")
        Table.heading('Gender',text="Gender")
        Table.heading('Contact',text="Contact")
        Table.heading('Email',text="Email ID")
        Table.heading('Caste',text="Caste")
        Table.heading('MaritalStatus',text="MaritalStatus")
        Table.heading('HiredLocation',text="HiredLocation")
        Table.heading('BasicSalary',text="BasicSalary")
        Table["show"]="headings"
        mayank()
        Table.column("Empcode",width=100)
        Table.column('Designation',width=100)
        Table.column('DOJ',width=100)
        Table.column('Name',width=100)
        Table.column('DOB',width=100)
        Table.column('experience',width=100)
        Table.column('Age',width=100)
        Table.column('Gender',width=100)
        Table.column('Contact',width=100)
        Table.column('Email',width=100)
        Table.column('Caste',width=100)
        Table.column('MaritalStatus',width=100)
        Table.column('HiredLocation',width=100)
        Table.column('BasicSalary',width=100)
        Table.pack(side=TOP,fill=X)
        ppppp=Button(f1,text="Delete",font=("Comic Sans MS,",13),fg="white",bg="brown",command=delete_queries)
        ppppp.place(x=1050,y=50)
        ko=Entry(f1,font=("Comic Sans MS,",20),textvariable=Empcode)
        ko.place(x=650,y=50)
        u_want=Label(f1,text="Enter Employ ID of Record You Want to Delete ",font=("Times New Roman",20),fg="black",bg="light cyan")
        u_want.place(x=50,y=50)
        bck=Button(f1,text="Back",font=("Times New Roman",20),fg="black",bg="light blue",command=bck4)
        bck.place(x=800,y=150,width=120,height=40)
#==============================UPDATE USER AND ADMIN===============================#
def update_screen():
    def clear2():
            f1.destroy()
            Empcode. set("")
            Designation. set("")
            DOJ. set("")
            Name. set("")
            DOB. set("")
            experience. set("")
            Age. set("")
            Gender. set("")
            Contact. set("")
            Email. set("")
            Caste. set("")
            MaritalStatus. set("")
            HiredLocation. set("")
            BasicSalary. set("")
            Address. set("")
    def clear3():
            Empcode. set("")
            Designation. set("")
            DOJ. set("")
            Name. set("")
            DOB. set("")
            experience. set("")
            Age. set("")
            Gender. set("")
            Contact. set("")
            Email. set("")
            Caste. set("")
            MaritalStatus. set("")
            HiredLocation. set("")
            BasicSalary. set("")
            Address. set("")
    def srch_updt():
        if Empcode.get()=="":
            mb.showerror("Error","Enter Employee Id")
        cur.execute("use PayrollManager")
        cur.execute("select * from Payroll where empcode={}".format(Empcode.get()))
        row=cur.fetchone()
        if row==None:
            mb.showinfo("Error","Invalid Employee Id")
        else:
            print(row)
            Designation. set(row[1])
            DOJ. set(row[2])
            Name. set(row[3])
            DOB. set(row[4])
            experience. set(row[5])
            Age. set(row[6])
            Gender. set(row[7])
            Contact. set(row[8])
            Email. set(row[9])
            Caste. set(row[10])
            MaritalStatus. set(row[11])
            HiredLocation. set(row[12])
            BasicSalary. set(row[13])
            Address. set(row[14])
    f1=Frame(root,bd=2,relief=RIDGE,bg="light cyan")
    f1.place(x=0,y=50,width=1400,height=800)
    tc=Label(root,text="Employee Payroll Management System",font=("Times New Roman",40),fg="white",bg="brown")
    tc.place(x=0,y=0,relwidth=1)
    mpo=Label(f1,text="Update Employee",font=("Times New Roman",20),fg="black",bg="yellow")
    mpo.place(x=0,y=25,relwidth=1)
    c=Label(f1,text="Enter Employee Code To Search ",font=("Times New Roman",20,"bold"),bg="light cyan")
    c.place(x=0,y=85)
    ko=Entry(f1,font=("Comic Sans MS,",20),textvariable=Empcode)
    ko.place(x=420,y=90,width=280,height=30)
    ll=Button(f1,text="Search",font=("Times New Roman",20),fg="white",bg="black",command=srch_updt)
    ll.place(x=750,y=90,width=150,height=30)
    d=Label(f1,text="Designation",font=("Times New Roman",18,"bold"),bg="light cyan")
    d.place(x=20,y=150)
    ent=Entry(f1,font=("Comic Sans MS,",12),textvariable=Designation)
    ent.place(x=220,y=150,width=280,height=30)
    f=Label(f1,text="DOJ",font=("Times New Roman",18,"bold"),bg="light cyan")
    f.place(x=680,y=150)
    g=Entry(f1,font=("Comic Sans MS,",12),textvariable=DOJ)
    g.place(x=880,y=150,width=280,height=30)
    h1=Label(f1,text="Name",font=("Times New Roman",18,"bold"),bg="light cyan")
    h1.place(x=20,y=190)
    i=Entry(f1,font=("Comic Sans MS,",12),textvariable=Name)
    i.place(x=220,y=190,width=280,height=30)
    j=Label(f1,text="DOB",font=("Times New Roman",18,"bold"),bg="light cyan")
    j.place(x=680,y=190)
    cal=DateEntry(f1,selectmode='day',textvariable=DOB,font=("Comic Sans MS,",12))
    cal.place(x=880,y=190,width=280,height=30)
    l=Label(f1,text="Expierence",font=("Times New Roman",18,"bold"),bg="light cyan")
    l.place(x=20,y=230)
    m=Entry(f1,font=("Comic Sans MS,",12),textvariable=experience)
    m.place(x=220,y=230,width=280,height=30)
    n=Label(f1,text="Age",font=("Times New Roman",18,"bold"),bg="light cyan")
    n.place(x=680,y=230)
    o=Entry(f1,font=("Comic Sans MS,",12),textvariable=Age)
    o.place(x=880,y=230,width=280,height=30)
    p=Label(f1,text="Gender",font=("Times New Roman",18,"bold"),bg="light cyan")
    p.place(x=20,y=270)
    q=Entry(f1,font=("Comic Sans MS,",12),textvariable=Gender)
    q.place(x=220,y=270,width=280,height=30)
    r=Label(f1,text="Contact",font=("Times New Roman",18,"bold"),bg="light cyan")
    r.place(x=680,y=270)
    s=Entry(f1,font=("Comic Sans MS,",12),textvariable=Contact)
    s.place(x=880,y=270,width=280,height=30)
    t=Label(f1,text="Email Id",font=("Times New Roman",18,"bold"),bg="light cyan")
    t.place(x=20,y=310)
    u=Entry(f1,font=("Comic Sans MS,",12),textvariable=Email)
    u.place(x=220,y=310,width=280,height=30)
    v=Label(f1,text="Category",font=("Times New Roman",18,"bold"),bg="light cyan")
    v.place(x=680,y=310)
    w=Entry(f1,font=("Comic Sans MS,",12),textvariable=Caste)
    w.place(x=880,y=310,width=280,height=30)
    x=Label(f1,text="Marital Status",font=("Times New Roman",18,"bold"),bg="light cyan")
    x.place(x=20,y=350)
    y=Entry(f1,font=("Comic Sans MS,",12),textvariable=MaritalStatus)
    y.place(x=220,y=350,width=280,height=30)
    z=Label(f1,text="Hired Location",font=("Times New Roman",18,"bold"),bg="light cyan")
    z.place(x=680,y=350)
    aa=Entry(f1,font=("Comic Sans MS,",12),textvariable=HiredLocation)
    aa.place(x=880,y=350,width=280,height=30)
    ab=Label(f1,text="Basic Salary",font=("Times New Roman",18,"bold"),bg="light cyan")
    ab.place(x=20,y=390)
    ac=Entry(f1,font=("Comic Sans MS,",12),textvariable=BasicSalary)
    ac.place(x=220,y=390,width=280,height=30)
    ad=Label(f1,text="Address",font=("Times New Roman",18,"bold"),bg="light cyan")
    ad.place(x=680,y=390)
    ae=Entry(f1,font=("Comic Sans MS,",12),textvariable=Address)
    ae.place(x=880,y=390,width=350,height=75)
    clr=Button(f1,text="Clear",font=("Times New Roman",20),fg="white",bg="black",command=clear3)
    clr.place(x=200,y=510,width=120,height=40)
    bck=Button(f1,text="Back",font=("Times New Roman",20),fg="white",bg="black",command=clear2)
    bck.place(x=500,y=510,width=120,height=40)
    bck=Button(f1,text="Update",font=("Times New Roman",20),fg="white",bg="black",command=update_queries)
    bck.place(x=900,y=510,width=120,height=40)
OTP=random.randrange(100000,999999)
def forget():
    def bck1():
        userop.destroy()
    global OTP
    def cotp12():
            global OTP
            a = otp.get()      #otp entry
            if a == str(OTP):   #a is strinvar
                    mb.showinfo("OTP","OTP is correct")
                    opbancho['state']='normal'   #update
                    oppoluri['state']='disabled'  
            else:
                    mb.showerror("Error","Check Your OTP Again")
                    oppoluri['state']='normal'
                    opbancho['state']='disabled'
            opbattu['state']='disabled'
    def getotp():
        global OTP
        if emp.get()=="":
            mb.showerror("Error","Enter Employee id")
        else:
            cur.execute("use PayrollManager")
            cur.execute("select * from Payroll where Empcode='{}'".format(emp.get()))
            row=cur.fetchone()
            print(row)
            if row==None:
                mb.showerror("Error","Invalid Id")
            else:
                otp="Hello Sir/Madam,\n\n You Are using the app made by Mayank Nihalchandani And Harshil Dodwani\n\n"+ str(OTP) +"\n\nis your OTP"
                msg= otp
                s = smtplib.SMTP('smtp.gmail.com', 587)  #path and gmail unique code
                s.starttls()                             #security
                s.login("mhpayrollsystem@gmail.com", "csacgvyuzwiwqzft")   #app password
                emailid = row[9]                      #10th record is email
                s.sendmail('&&&&&&&&&&&',emailid,msg)    #subject,emailid,msg
                oppoluri['state']='normal'
                opbattu['state']='disabled'
    def changepass():
        cur.execute("use PayrollManager")
        cur.execute("update login1 set password='{}' where Empcode='{}'".format(upas.get(),emp.get()))
        link.commit()
        if True:
            mb.showinfo("Info","Update Sucessfull")
    userop=Frame(root,bd=5,bg="white",relief=RIDGE)
    userop.place(x=875,y=230,width=440,height=412)
    b=Label(userop,text="EmpCode",font=("times new roman",20),bg="white")
    b.place(x=10,y=10,width=120,height=35)
    optoppa=Entry(userop,font=("Times New Roman",20),textvariable=emp)
    optoppa.place(x=150,y=10,width=150,height=35)
    opsloties=Label(userop,text="OTP",font=("Times New Roman",20),bg="white")
    opsloties.place(x=10,y=100,width=120,height=35)
    oplofi=Entry(userop,font=("Times New Roman",20),textvariable=otp)
    oplofi.place(x=150,y=100,width=150,height=35)
    opsoty=Label(userop,text="Password",font=("Times New Roman",20),bg="white")
    opsoty.place(x=10,y=190,width=120,height=35)
    opfattu=Entry(userop,font=("Times New Roman",20),textvariable=upas)
    opfattu.place(x=150,y=190,width=220,height=35)
    opbattu=Button(userop,text="Send OTP",font=("Times New Roman",15),command=getotp)
    opbattu.place(x=320,y=10,width=100,height=35)
    oppoluri=Button(userop,text="Submit",font=("Times New Roman",15),command=cotp12)
    oppoluri.place(x=320,y=100,width=100,height=35)
    oppoluri['state']='disabled'
    opbattu=Button(userop,text="Back",font=("Times New Roman",15),command=bck1)
    opbattu.place(x=320,y=312,width=100,height=35)
    opbancho=Button(userop,text="Update",font=("Times New Roman",15),command=changepass)
    opbancho.place(x=150,y=250,width=100,height=35)
    opbancho['state']='disabled'
#=================================MAIN OPENING SCREEN==========================#
def main():
    def admin():
        def login():
            global lbl2
            global lbl1
            print(ent1.get(),ent2.get())
            if ent1.get()=="" or ent2.get()=="":
                mb.showerror("Error","All fields are required")
            else:
                cur.execute("use PayrollManager")
                cur.execute("select * from login1 where Name='{}' and password='{}'".format(ent1.get().lower(),ent2.get().lower()))
                row=cur.fetchone()
                print(row)
                if row==None:
                    mb.showerror("Error","Invalid Username and Password")
                else:
                    mb.showinfo("Sucess","login Sucessful")
                    tc=Label(root,text="Employee Payroll Management System",font=("Times New Roman",40),fg="white",bg="brown")
                    tc.place(x=0,y=0,relwidth=1)
                    userophaiparnoobhai=Frame(root,bd=5,relief=RIDGE)
                    userophaiparnoobhai.place(x=10,y=70,width=1400,height=800)
                    Left=Frame(userophaiparnoobhai,bd=2,relief=RIDGE)
                    Left.place(x=0,y=75,width=400,height=565)
                    Logo=Image.open("i//login1.jfif")
                    Logo=Logo.resize((390,190),Image.LANCZOS)
                    Logo=ImageTk.PhotoImage(Logo)
                    lbl=Label(Left,image=Logo,bg="white")
                    lbl.pack(side=TOP,fill=X)
                    lbl1=Label(Left,text="Menu",font=("Times new Roman",20),bg="light green",fg="white",anchor='center',bd=5,relief=RIDGE)
                    lbl1.pack(side=TOP,fill=X)
                    btn1=Button(Left,text="Employees List",font=("Times New Roman",20,"bold"),bg="white",bd=3,command=dis)
                    btn1.pack(side=TOP,fill=X)
                    btn1=Button(Left,text="Search Employee",font=("Times New Roman",20,"bold"),bg="white",bd=3,command=search)
                    btn1.pack(side=TOP,fill=X)
                    btn1=Button(Left,text="Update Employee",font=("Times New Roman",20,"bold"),bg="white",bd=3,command=update_screen)
                    btn1.pack(side=TOP,fill=X)
                    btn1=Button(Left,text="Calculate Salary",font=("Times New Roman",20,"bold"),bg="white",bd=3,command=slry)
                    btn1.pack(side=TOP,fill=X)
                    btn1=Button(Left,text="Delete Employee",font=("Times New Roman",20,"bold"),bg="white",bd=3,command=deletam)
                    btn1.pack(side=TOP,fill=X)
                    def logout():
                        ans=mb.askyesno("Confirm","Are you sure you want to log out ?")
                        if ans:
                            userophaiparnoobhai.destroy()
                            USERNAME.set("")
                            PASS.set("")
                    Right=Frame(userophaiparnoobhai,bd=2,relief=RIDGE,bg="white")
                    Right.place(x=400,y=75,width=930,height=565)
                    lbl1=Label(userophaiparnoobhai,text="Welcome to Employee Payroll Management System !!!",font=("Times new Roman",25),anchor='w',bg="pink",fg="red",bd=5,relief=RIDGE)
                    lbl1.place(x=0,y=10,relwidth=1)
                    lgout=Button(userophaiparnoobhai,text="LOG OUT",font=("Times New Roman",20,"bold"),bg="white",bd=1,command=logout)
                    lgout.place(x=1050,y=15,height=39)
                    lbl1=Label(Right,text="MH Payroll Management System | Developed by Mayank & Harshil",font=("Times new Roman",15),bg="green",fg="white",anchor='center',relief=RIDGE)
                    lbl1.place(x=0,y=470,relwidth=1)
                    lbl1=Label(Right,text="For any Technical Issues contact 9426874317 / mhpayrollsystem@gmail.com",font=("Times new Roman",15),bg="green",fg="white",anchor='center',relief=RIDGE)
                    lbl1.place(x=0,y=500,relwidth=1)
                    count=0
                    cur.execute("select * from payroll")
                    for i in cur.fetchall():
                        print(i)
                        count=count+1
                    '''cur.execute("select Gross_salary from salary")
                    ad=cur.fetchall()
                    for i in ad:
                        salary=salary+int(i[0])'''
                    lbl1=Label(Right,text=f"Total Employees \n [{count}]",font=("Times new Roman",22,'bold'),bg="blue",fg="white",bd=5,relief=RIDGE)
                    lbl1.place(x=75,y=150,width=300,height=150)
                    lbl2=Label(Right,text=f"Total Salary Paid \n [{salary}]",font=("Times new Roman",22,'bold'),bg="orange",fg="white",bd=5,relief=RIDGE)
                    lbl2.place(x=550,y=150,width=300,height=150)
                    ttq=Label(Right,font=("Times new Roman",18),bg="green",fg="white",anchor='e')
                    ttq.place(x=0,y=0,relwidth=1)
                    ttq.config(text=datetime.date.today())
                    ttq=Label(Right,text="Date:",font=("Times new Roman",18,'bold'),bg="green",fg="white")
                    ttq.place(x=740,y=0)
                    btn1=button(Left,text="Exit",font=("Times New Roman",19,"bold"),bg="white",bd=3,command=quitop)
                    btn1.pack(side=TOP,fill=X)   #for jaanboojke error purpose
        login()
    m=Image.open("i\\discuss.jfif")            # open image
    re1=m.resize((1550,765),Image.LANCZOS)   #resize,,,no blur
    s=ImageTk.PhotoImage(re1)                  #photoimage image to label for access
    sahil=Label(root,image=s,bg="white")
    sahil.place(x=0,y=0,relwidth=1,relheight=1)
    tc=Label(root,text="Employee Payroll Management System",font=("Times New Roman",40),fg="white",bg="brown")
    tc.place(x=0,y=0,relwidth=1)
    #================================MAIN OPENING FRAME================================# 
    f7=Frame(sahil,bd=5,relief=RIDGE)
    f7.place(x=875,y=230,width=440,height=412)
    title=Label(f7,text="Login Here",font=("Impact",35,"bold"),fg="orange")
    title.place(x=100,y=20)
    mayank=Image.open("i\\username.jpg")
    resized=mayank.resize((30,30),Image.LANCZOS)
    f=ImageTk.PhotoImage(resized)
    my_pic=Label(f7,image=f,bg="white")
    my_pic.place(x=95,y=100)
    title1=Label(f7,text="USERNAME",font=("Times new roman",18,"bold"))
    title1.place(x=135,y=100)
    ent1=Entry(f7,font=("Comic Sans MS,",12),bg="white",textvariable=USERNAME)
    ent1.place(x=100,y=140,width=230,height=30)
    harshil=Image.open("i\\bcpass.jpeg")
    resized1=harshil.resize((30,30),Image.LANCZOS)
    vivek=ImageTk.PhotoImage(resized1)
    my_pic1=Label(f7,image=vivek,bg="white")
    my_pic1.place(x=95,y=180)
    title2=Label(f7,text="PASSWORD",font=("Times new roman",18,"bold"))
    title2.place(x=135,y=180)
    ent2=Entry(f7,show="*",font=("Comic Sans MS,",12),bg="white",textvariable=PASS)
    ent2.place(x=100,y=220,width=230,height=30)
    ll=Button(f7,text="Login",font=("Times New Roman",15),command=admin)
    ll.place(x=100,y=310)
    l2=Button(f7,text="Register New Account",font=("Times New Roman",15),command=register,bd=0,fg="red")
    l2.place(x=100,y=360)
    l2=Button(f7,text="Forgot Pasword ?",font=("Times New Roman",15),bd=0,fg="red",command=forget)
    l2.place(x=100,y=270)
    root.mainloop()
main()
